@using Microsoft.Data.SqlClient;
@using Newtonsoft.Json.Linq;
@using System.Data;
@using Newtonsoft.Json;
@using PATHSMap.Data;
@page "/Forecast"


<PageTitle>Forecast</PageTitle>

<MudText Class="mb-10 mt-10" Typo="Typo.h3" Align="Align.Center">Forecast</MudText>
<MudText Class="mb-10 mt-10" Typo="Typo.h4" Align="Align.Center">For @pubname</MudText>
<div class="forecast">
    <MudPaper Class="mb-2" Elevation="3">
        <MudCard>
            <MudCardContent>
                <MudText Class="mt-15" Align="Align.Center">@pubtemp</MudText>
                <MudText Typo="Typo.body2" Align="Align.Center">Placeholderino</MudText>
            </MudCardContent>
        </MudCard>
    </MudPaper>
</div>


@code {

    private IEnumerable<UserData> users = new List<UserData>();
    protected override async Task OnInitializedAsync()
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json")
            .Build();
        string connString = config.GetConnectionString("DefaultConnection");
        IDbConnection conn4 = new SqlConnection(connString);

        var userRepo = new UserRepository(conn4);
        users = userRepo.GetAllUsers();

        var zipCode= users.First().zip;
        var language = users.First().language;
        var units = users.First().units;
        

        HttpClient client = new HttpClient();
        string settings = File.ReadAllText("appsettings.json");
        string APIkey = JObject.Parse(settings).GetValue("OpenWeatherMapAPIKey").ToString();
        var response = await client.GetStringAsync($"https://api.openweathermap.org/data/2.5/weather?zip={zipCode}&appid={APIkey}&lang={language}&units={units}");
        Console.WriteLine(response);
        OWMDeserialization.Root OWM = JsonConvert.DeserializeObject<OWMDeserialization.Root>(response);
        var temp = OWM.main.temp;
        var feels_like = OWM.main.feels_like;
        var temp_min = OWM.main.temp_min;
        var temp_max = OWM.main.temp_max;
        var humidity = OWM.main.humidity;
        var location = OWM.name;

        pubtemp = temp;
        pubname = location;
    }   
    public double pubtemp { get; set; }
    public double pubfeels_like { get; set; }
    public double pubtemp_min { get; set; }
    public double pubtemp_max { get; set; }
    public int pubhumidity { get; set; }
    public string pubname { get; set; }

}
